drop table if exists smallt;
NOTICE:  table "smallt" does not exist, skipping
create table smallt (i int, t text, d date) distributed by (i);
insert into smallt select i%10, 'text ' || (i%15), '2011-01-01'::date + ((i%20) || ' days')::interval
from generate_series(0, 99) i;
drop table if exists bigt;
NOTICE:  table "bigt" does not exist, skipping
create table bigt (i int, t text, d date) distributed by (i);
insert into bigt select i/10, 'text ' || (i/15), '2011-01-01'::date + ((i/20) || ' days')::interval
from generate_series(0, 999999) i;
drop table if exists smallt2;
NOTICE:  table "smallt2" does not exist, skipping
create table smallt2 (i int, t text, d date) distributed by (i);
insert into smallt2 select i%5, 'text ' || (i%10), '2011-01-01'::date + ((i%15) || ' days')::interval
from generate_series(0, 49) i;
-- HashAgg, Agg
select d, count(*) from smallt group by d;
     d      | count 
------------+-------
 01-13-2011 |     5
 01-11-2011 |     5
 01-03-2011 |     5
 01-09-2011 |     5
 01-15-2011 |     5
 01-07-2011 |     5
 01-01-2011 |     5
 01-05-2011 |     5
 01-19-2011 |     5
 01-17-2011 |     5
 01-12-2011 |     5
 01-08-2011 |     5
 01-10-2011 |     5
 01-14-2011 |     5
 01-20-2011 |     5
 01-18-2011 |     5
 01-04-2011 |     5
 01-02-2011 |     5
 01-16-2011 |     5
 01-06-2011 |     5
(20 rows)

explain analyze select d, count(*) from smallt group by d;
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=4.20..4.45 rows=10 width=12)
   Rows out:  20 rows at destination with 17 ms to end, start offset by 0.458 ms.
   ->  HashAggregate  (cost=4.20..4.45 rows=10 width=12)
         Group By: smallt.d
         Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 12 ms to first row, 16 ms to end, start offset by 1.046 ms.
         Executor memory:  6225K bytes avg, 6225K bytes max (seg0).
         ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=3.50..3.90 rows=10 width=12)
               Hash Key: smallt.d
               Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 5.070 ms to first row, 6.302 ms to end, start offset by 4.868 ms.
               ->  HashAggregate  (cost=3.50..3.50 rows=10 width=12)
                     Group By: smallt.d
                     Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 4.530 ms to first row, 7.977 ms to end, start offset by 3.080 ms.
                     Executor memory:  6225K bytes avg, 6225K bytes max (seg0).
                     ->  Seq Scan on smallt  (cost=0.00..3.00 rows=50 width=4)
                           Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.067 ms to first row, 0.091 ms to end, start offset by 5.815 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 6391K bytes avg x 2 workers, 6391K bytes max (seg0).
   (slice2)    Executor memory: 6391K bytes avg x 2 workers, 6391K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Total runtime: 17.600 ms
(22 rows)

set statement_mem=2560;
select count(*) from (select i, t, d, count(*) from bigt group by i, t, d) tmp;
 count  
--------
 133333
(1 row)

explain analyze select count(*) from (select i, t, d, count(*) from bigt group by i, t, d) tmp;
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=24039.83..24039.84 rows=1 width=8)
   Rows out:  1 rows with 2471 ms to end, start offset by 0.558 ms.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=24039.77..24039.81 rows=1 width=8)
         Rows out:  2 rows at destination with 2471 ms to end, start offset by 0.559 ms.
         ->  Aggregate  (cost=24039.77..24039.78 rows=1 width=8)
               Rows out:  Avg 1.0 rows x 2 workers.  Max 1 rows (seg0) with 2470 ms to end, start offset by 1.108 ms.
               ->  Subquery Scan tmp  (cost=21491.52..23784.94 rows=50965 width=0)
                     Rows out:  Avg 66666.5 rows x 2 workers.  Max 66668 rows (seg1) with 1803 ms to first row, 2445 ms to end, start offset by 1.187 ms.
                     ->  HashAggregate  (cost=21491.52..22765.65 rows=50965 width=48)
                           Group By: bigt.i, bigt.t, bigt.d
                           Rows out:  Avg 66666.5 rows x 2 workers.  Max 66668 rows (seg1) with 1803 ms to first row, 2416 ms to end, start offset by 1.187 ms.
                           Executor memory:  2786K bytes avg, 2786K bytes max (seg0).
                           Work_mem used:  2360K bytes avg, 2360K bytes max (seg0). Workfile: (2 spilling, 0 reused)
                           Work_mem wanted: 5747K bytes avg, 5747K bytes max (seg1) to lessen workfile I/O affecting 2 workers.
                           (seg1)   66668 groups total in 32 batches; 1 overflows; 66668 spill groups.
                           (seg1)   Hash chain length 1.6 avg, 15 max, using 66900 of 270336 buckets.
                           ->  Seq Scan on bigt  (cost=0.00..11479.76 rows=500588 width=18)
                                 Rows out:  Avg 500000.0 rows x 2 workers.  Max 500000 rows (seg0) with 0.042 ms to first row, 126 ms to end, start offset by 1.134 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)  * Executor memory: 2944K bytes avg x 2 workers, 2944K bytes max (seg0).  Work_mem: 2360K bytes max, 5747K bytes wanted.
 Statement statistics:
   Memory used: 2560K bytes
   Memory wanted: 6246K bytes
 Total runtime: 2471.986 ms
(25 rows)

set statement_mem=128000;
-- DQA
set gp_enable_agg_distinct=off;
set gp_eager_one_phase_agg=on;
select count(distinct d) from smallt;
 count 
-------
    20
(1 row)

explain analyze select count(distinct d) from smallt;
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6.25..6.26 rows=1 width=8)
   Rows out:  1 rows with 0.980 ms to end, start offset by 0.311 ms.
   Executor memory:  29K bytes.
   Work_mem used:  29K bytes.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..6.00 rows=50 width=4)
         Rows out:  100 rows at destination with 0.616 ms to first row, 0.770 ms to end, start offset by 0.311 ms.
         ->  Seq Scan on smallt  (cost=0.00..3.00 rows=50 width=4)
               Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.027 ms to first row, 0.052 ms to end, start offset by 0.680 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.  Work_mem: 29K bytes max.
   (slice1)    Executor memory: 127K bytes avg x 2 workers, 127K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  gp_enable_agg_distinct=off
 Total runtime: 1.395 ms
(15 rows)

set statement_mem=2560;
select count(distinct d) from bigt;
 count 
-------
 50000
(1 row)

explain analyze select count(distinct d) from bigt;
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=44017.98..44017.99 rows=1 width=8)
   Rows out:  1 rows with 6450 ms to end, start offset by 0.408 ms.
   Executor memory:  2585K bytes.
   Work_mem used:  2585K bytes.
   Work_mem wanted: 19596K bytes to lessen workfile I/O.
   ->  Gather Motion 2:1  (slice1; segments: 2)  (cost=0.00..41515.04 rows=500588 width=4)
         Rows out:  1000000 rows at destination with 2.479 ms to first row, 1560 ms to end, start offset by 0.409 ms.
         ->  Seq Scan on bigt  (cost=0.00..11479.76 rows=500588 width=4)
               Rows out:  Avg 500000.0 rows x 2 workers.  Max 500000 rows (seg0) with 0.050 ms to first row, 340 ms to end, start offset by 0.848 ms.
 Slice statistics:
   (slice0)  * Executor memory: 2819K bytes.  Work_mem: 2585K bytes max, 19596K bytes wanted.
   (slice1)    Executor memory: 151K bytes avg x 2 workers, 151K bytes max (seg0).
 Statement statistics:
   Memory used: 2560K bytes
   Memory wanted: 19795K bytes
 Settings:  gp_enable_agg_distinct=off
 Total runtime: 6450.918 ms
(17 rows)

set statement_mem=128000;
set gp_enable_agg_distinct=on;
set gp_eager_one_phase_agg=off;
-- Rescan on Agg (with Material in the inner side of nestloop)
set enable_nestloop=on;
set enable_hashjoin=off;
select t1.*, t2.* from
(select d, count(*) from smallt group by d) as t1, (select d, sum(i) from smallt group by d) as t2
where t1.d = t2.d;
     d      | count |     d      | sum 
------------+-------+------------+-----
 01-13-2011 |     5 | 01-13-2011 |  10
 01-11-2011 |     5 | 01-11-2011 |   0
 01-15-2011 |     5 | 01-15-2011 |  20
 01-07-2011 |     5 | 01-07-2011 |  30
 01-01-2011 |     5 | 01-01-2011 |   0
 01-03-2011 |     5 | 01-03-2011 |  10
 01-05-2011 |     5 | 01-05-2011 |  20
 01-09-2011 |     5 | 01-09-2011 |  40
 01-19-2011 |     5 | 01-19-2011 |  40
 01-17-2011 |     5 | 01-17-2011 |  30
 01-18-2011 |     5 | 01-18-2011 |  35
 01-12-2011 |     5 | 01-12-2011 |   5
 01-04-2011 |     5 | 01-04-2011 |  15
 01-08-2011 |     5 | 01-08-2011 |  35
 01-02-2011 |     5 | 01-02-2011 |   5
 01-10-2011 |     5 | 01-10-2011 |  45
 01-14-2011 |     5 | 01-14-2011 |  15
 01-16-2011 |     5 | 01-16-2011 |  25
 01-20-2011 |     5 | 01-20-2011 |  45
 01-06-2011 |     5 | 01-06-2011 |  25
(20 rows)

explain analyze select t1.*, t2.* from
(select d, count(*) from smallt group by d) as t1, (select d, sum(i) from smallt group by d) as t2
where t1.d = t2.d;
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice3; segments: 2)  (cost=8.87..18.32 rows=10 width=24)
   Rows out:  20 rows at destination with 14 ms to first row, 15 ms to end, start offset by 0.754 ms.
   ->  Nested Loop  (cost=8.87..18.32 rows=10 width=24)
         Join Filter: t1.d = t2.d
         Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 12 ms to first row, 14 ms to end, start offset by 1.856 ms.
         ->  HashAggregate  (cost=4.20..4.45 rows=10 width=12)
               Group By: public.smallt.d
               Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 1.311 ms to first row, 2.916 ms to end, start offset by 13 ms.
               Executor memory:  3153K bytes avg, 3153K bytes max (seg0).
               ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=3.50..3.90 rows=10 width=12)
                     Hash Key: public.smallt.d
                     Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 0.030 ms to first row, 0.035 ms to end, start offset by 13 ms.
                     ->  HashAggregate  (cost=3.50..3.50 rows=10 width=12)
                           Group By: public.smallt.d
                           Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 2.779 ms to first row, 5.114 ms to end, start offset by 4.413 ms.
                           Executor memory:  3153K bytes avg, 3153K bytes max (seg0).
                           ->  Seq Scan on smallt  (cost=0.00..3.00 rows=50 width=4)
                                 Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.039 ms to first row, 0.071 ms to end, start offset by 5.261 ms.
         ->  Materialize  (cost=4.67..4.87 rows=10 width=12)
               Rows out:  Avg 101.0 rows x 2 workers.  Max 101 rows (seg0) with 11 ms to end of 11 scans, start offset by 15 ms.
               ->  HashAggregate  (cost=4.20..4.45 rows=10 width=12)
                     Group By: public.smallt.d
                     Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 9.396 ms to first row, 11 ms to end, start offset by 1.984 ms.
                     Executor memory:  3153K bytes avg, 3153K bytes max (seg0).
                     ->  Redistribute Motion 2:2  (slice2; segments: 2)  (cost=3.50..3.90 rows=10 width=12)
                           Hash Key: public.smallt.d
                           Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 3.189 ms to first row, 5.992 ms to end, start offset by 3.886 ms.
                           ->  HashAggregate  (cost=3.50..3.50 rows=10 width=12)
                                 Group By: public.smallt.d
                                 Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 2.446 ms to first row, 4.757 ms to end, start offset by 2.050 ms.
                                 Executor memory:  3153K bytes avg, 3153K bytes max (seg0).
                                 ->  Seq Scan on smallt  (cost=0.00..3.00 rows=50 width=8)
                                       Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.087 ms to first row, 0.138 ms to end, start offset by 2.867 ms.
 Slice statistics:
   (slice0)    Executor memory: 227K bytes.
   (slice1)    Executor memory: 3387K bytes avg x 2 workers, 3387K bytes max (seg0).
   (slice2)    Executor memory: 3387K bytes avg x 2 workers, 3387K bytes max (seg0).
   (slice3)    Executor memory: 3403K bytes avg x 2 workers, 3403K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=off; enable_nestloop=on; gp_enable_agg_distinct=on
 Total runtime: 16.602 ms
(42 rows)

set enable_nestloop=off;
set enable_hashjoin=on;
-- Rescan on Agg (with Material in the inner side of nestloop)
set enable_nestloop=on;
set enable_hashjoin=off;
select t1.*, t2.* from
(select i, count(*) from smallt group by i) as t1, (select i, sum(i) from smallt group by i) as t2
where t1.i = t2.i;
 i | count | i | sum 
---+-------+---+-----
 2 |    10 | 2 |  20
 6 |    10 | 6 |  60
 0 |    10 | 0 |   0
 8 |    10 | 8 |  80
 4 |    10 | 4 |  40
 3 |    10 | 3 |  30
 9 |    10 | 9 |  90
 1 |    10 | 1 |  10
 7 |    10 | 7 |  70
 5 |    10 | 5 |  50
(10 rows)

explain analyze select t1.*, t2.* from
(select i, count(*) from smallt group by i) as t1, (select i, sum(i) from smallt group by i) as t2
where t1.i = t2.i;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=7.23..9.71 rows=5 width=24)
   Rows out:  10 rows at destination with 7.275 ms to first row, 7.606 ms to end, start offset by 0.483 ms.
   ->  Nested Loop  (cost=7.23..9.71 rows=5 width=24)
         Join Filter: t1.i = t2.i
         Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 4.958 ms to first row, 6.993 ms to end, start offset by 0.974 ms.
         ->  HashAggregate  (cost=3.50..3.62 rows=5 width=12)
               Group By: public.smallt.i
               Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 1.627 ms to first row, 3.500 ms to end, start offset by 4.297 ms.
               Executor memory:  3153K bytes avg, 3153K bytes max (seg0).
               ->  Seq Scan on smallt  (cost=0.00..3.00 rows=50 width=4)
                     Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.018 ms to first row, 0.041 ms to end, start offset by 7.857 ms.
         ->  Materialize  (cost=3.73..3.83 rows=5 width=12)
               Rows out:  Avg 26.0 rows x 2 workers.  Max 26 rows (seg0) with 3.317 ms to first row, 3.331 ms to end of 6 scans, start offset by 6.926 ms.
               ->  HashAggregate  (cost=3.50..3.62 rows=5 width=12)
                     Group By: public.smallt.i
                     Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 1.614 ms to first row, 3.196 ms to end, start offset by 1.080 ms.
                     Executor memory:  3153K bytes avg, 3153K bytes max (seg0).
                     ->  Seq Scan on smallt  (cost=0.00..3.00 rows=50 width=4)
                           Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.037 ms to first row, 0.061 ms to end, start offset by 1.707 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 3327K bytes avg x 2 workers, 3327K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=off; enable_nestloop=on; gp_enable_agg_distinct=on
 Total runtime: 8.828 ms
(26 rows)

set enable_nestloop=off;
set enable_hashjoin=on;
-- Limit on Agg
select d, count(*) from smallt group by d limit 5; --ignore
     d      | count 
------------+-------
 01-12-2011 |     5
 01-08-2011 |     5
 01-10-2011 |     5
 01-14-2011 |     5
 01-20-2011 |     5
(5 rows)

explain analyze select d, count(*) from smallt group by d limit 5;
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4.20..4.36 rows=5 width=12)
   Rows out:  5 rows with 16 ms to end, start offset by 0.476 ms.
   ->  Gather Motion 2:1  (slice2; segments: 2)  (cost=4.20..4.36 rows=3 width=12)
         Rows out:  5 rows at destination with 16 ms to end, start offset by 0.477 ms.
         ->  Limit  (cost=4.20..4.26 rows=3 width=12)
               Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 13 ms to first row, 15 ms to end, start offset by 1.092 ms.
               ->  HashAggregate  (cost=4.20..4.45 rows=10 width=12)
                     Group By: smallt.d
                     Rows out:  Avg 5.0 rows x 2 workers.  Max 5 rows (seg0) with 13 ms to first row, 15 ms to end, start offset by 1.092 ms.
                     Executor memory:  6225K bytes avg, 6225K bytes max (seg0).
                     ->  Redistribute Motion 2:2  (slice1; segments: 2)  (cost=3.50..3.90 rows=10 width=12)
                           Hash Key: smallt.d
                           Rows out:  Avg 10.0 rows x 2 workers at destination.  Max 10 rows (seg0) with 5.850 ms to first row, 5.861 ms to end, start offset by 5.184 ms.
                           ->  HashAggregate  (cost=3.50..3.50 rows=10 width=12)
                                 Group By: smallt.d
                                 Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 5.472 ms to first row, 9.315 ms to end, start offset by 1.517 ms.
                                 Executor memory:  6225K bytes avg, 6225K bytes max (seg0).
                                 ->  Seq Scan on smallt  (cost=0.00..3.00 rows=50 width=4)
                                       Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.090 ms to first row, 0.138 ms to end, start offset by 4.922 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 6391K bytes avg x 2 workers, 6391K bytes max (seg0).
   (slice2)    Executor memory: 6391K bytes avg x 2 workers, 6391K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=on; enable_nestloop=off; gp_enable_agg_distinct=on
 Total runtime: 18.815 ms
(27 rows)

-- HashJoin
select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i;
 i |    t    |     d      
---+---------+------------
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
(1000 rows)

set optimizer_segments = 2;
explain analyze select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i;
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=4.25..20.00 rows=501 width=15)
   Rows out:  1000 rows at destination with 9.526 ms to first row, 16 ms to end, start offset by 0.385 ms.
   ->  Hash Join  (cost=4.25..20.00 rows=501 width=15)
         Hash Cond: t1.i = t2.i
         Rows out:  Avg 500.0 rows x 2 workers.  Max 500 rows (seg0) with 8.811 ms to first row, 15 ms to end, start offset by 0.814 ms.
         Executor memory:  1K bytes avg, 1K bytes max (seg0).
         Work_mem used:  1K bytes avg, 1K bytes max (seg0). Workfile: (0 spilling, 0 reused)
         (seg0)   Hash chain length 10.0 avg, 10 max, using 5 of 1048589 buckets.
         ->  Seq Scan on smallt t1  (cost=0.00..3.00 rows=50 width=15)
               Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.021 ms to first row, 0.042 ms to end, start offset by 0.814 ms.
         ->  Hash  (cost=3.00..3.00 rows=50 width=4)
               Rows in:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.120 ms to end, start offset by 9.501 ms.
               ->  Seq Scan on smallt t2  (cost=0.00..3.00 rows=50 width=4)
                     Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.034 ms to first row, 0.070 ms to end, start offset by 9.501 ms.
 Slice statistics:
   (slice0)    Executor memory: 203K bytes.
   (slice1)    Executor memory: 12487K bytes avg x 2 workers, 12487K bytes max (seg0).  Work_mem: 1K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=on; enable_nestloop=off; gp_enable_agg_distinct=on
 Total runtime: 16.507 ms
(21 rows)

reset optimizer_segments;
-- Rescan on HashJoin
--select t1.* from (select t11.* from smallt as t11, smallt as t22 where t11.i = t22.i and t11.i < 2) as t1,
--   (select t11.* from smallt as t11, smallt as t22 where t11.d = t22.d and t11.i < 5) as t2;
-- Material in SubPlan
select smallt2.* from smallt2
where i < (select count(*) from smallt where smallt.i = smallt2.i);
 i |   t    |     d      
---+--------+------------
 1 | text 1 | 01-02-2011
 3 | text 3 | 01-04-2011
 1 | text 6 | 01-07-2011
 3 | text 8 | 01-09-2011
 1 | text 1 | 01-12-2011
 3 | text 3 | 01-14-2011
 1 | text 6 | 01-02-2011
 3 | text 8 | 01-04-2011
 1 | text 1 | 01-07-2011
 3 | text 3 | 01-09-2011
 1 | text 6 | 01-12-2011
 3 | text 8 | 01-14-2011
 1 | text 1 | 01-02-2011
 3 | text 3 | 01-04-2011
 1 | text 6 | 01-07-2011
 3 | text 8 | 01-09-2011
 1 | text 1 | 01-12-2011
 3 | text 3 | 01-14-2011
 1 | text 6 | 01-02-2011
 3 | text 8 | 01-04-2011
 0 | text 0 | 01-01-2011
 2 | text 2 | 01-03-2011
 4 | text 4 | 01-05-2011
 0 | text 5 | 01-06-2011
 2 | text 7 | 01-08-2011
 4 | text 9 | 01-10-2011
 0 | text 0 | 01-11-2011
 2 | text 2 | 01-13-2011
 4 | text 4 | 01-15-2011
 0 | text 5 | 01-01-2011
 2 | text 7 | 01-03-2011
 4 | text 9 | 01-05-2011
 0 | text 0 | 01-06-2011
 2 | text 2 | 01-08-2011
 4 | text 4 | 01-10-2011
 0 | text 5 | 01-11-2011
 2 | text 7 | 01-13-2011
 4 | text 9 | 01-15-2011
 0 | text 0 | 01-01-2011
 2 | text 2 | 01-03-2011
 4 | text 4 | 01-05-2011
 0 | text 5 | 01-06-2011
 2 | text 7 | 01-08-2011
 4 | text 9 | 01-10-2011
 0 | text 0 | 01-11-2011
 2 | text 2 | 01-13-2011
 4 | text 4 | 01-15-2011
 0 | text 5 | 01-01-2011
 2 | text 7 | 01-03-2011
 4 | text 9 | 01-05-2011
(50 rows)

explain select smallt2.* from smallt2
where i < (select count(*) from smallt where smallt.i = smallt2.i);
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=4.15..7.19 rows=9 width=15)
   ->  Hash Join  (cost=4.15..7.19 rows=9 width=15)
         Hash Cond: smallt2.i = "Expr_SUBQUERY".csq_c0
         Join Filter: smallt2.i < "Expr_SUBQUERY".csq_c1
         ->  Seq Scan on smallt2  (cost=0.00..2.50 rows=25 width=15)
         ->  Hash  (cost=4.02..4.02 rows=5 width=12)
               ->  HashAggregate  (cost=3.75..3.92 rows=5 width=12)
                     Filter: smallt.i < count(*)
                     Group By: smallt.i
                     ->  Seq Scan on smallt  (cost=0.00..3.00 rows=50 width=4)
 Settings:  enable_hashjoin=on; enable_nestloop=off; gp_enable_agg_distinct=on
(11 rows)

-- Sort in MergeJoin
set enable_hashjoin=off;
set enable_mergejoin=on;
select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i and t1.i < 2;
 i |    t    |     d      
---+---------+------------
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
(200 rows)

explain analyze select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i and t1.i < 2;
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=7.36..8.06 rows=21 width=15)
   Rows out:  200 rows at destination with 0.972 ms to first row, 1.133 ms to end, start offset by 0.415 ms.
   ->  Merge Join  (cost=7.36..8.06 rows=21 width=15)
         Merge Cond: t1.i = t2.i
         Rows out:  Avg 100.0 rows x 2 workers.  Max 100 rows (seg0) with 0.169 ms to first row, 0.278 ms to end, start offset by 0.853 ms.
         ->  Sort  (cost=3.68..3.73 rows=10 width=15)
               Sort Key: t1.i
               Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.096 ms to first row, 0.101 ms to end, start offset by 0.854 ms.
               Executor memory:  29K bytes avg, 29K bytes max (seg0).
               Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
               ->  Seq Scan on smallt t1  (cost=0.00..3.25 rows=10 width=15)
                     Filter: i < 2
                     Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.027 ms to first row, 0.048 ms to end, start offset by 0.885 ms.
         ->  Sort  (cost=3.68..3.73 rows=10 width=4)
               Sort Key: t2.i
               Rows out:  Avg 91.0 rows x 2 workers.  Max 91 rows (seg0) with 0.068 ms to first row, 0.093 ms to end, start offset by 0.951 ms.
               Executor memory:  29K bytes avg, 29K bytes max (seg0).
               Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
               ->  Seq Scan on smallt t2  (cost=0.00..3.25 rows=10 width=4)
                     Filter: i < 2
                     Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.012 ms to first row, 0.033 ms to end, start offset by 0.980 ms.
 Slice statistics:
   (slice0)    Executor memory: 179K bytes.
   (slice1)    Executor memory: 215K bytes avg x 2 workers, 215K bytes max (seg0).  Work_mem: 29K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=off; enable_mergejoin=on; enable_nestloop=off; gp_enable_agg_distinct=on
 Total runtime: 1.949 ms
(28 rows)

select t1.* from smallt as t1, smallt as t2 where t1.d = t2.d and t1.i < 2;
 i |    t    |     d      
---+---------+------------
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
(100 rows)

--start_ignore
explain analyze select t1.* from smallt as t1, smallt as t2 where t1.d = t2.d and t1.i < 2;
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice2; segments: 2)  (cost=11.24..14.44 rows=51 width=15)
   Rows out:  100 rows at destination with 2.412 ms to first row, 2.542 ms to end, start offset by 0.494 ms.
   ->  Merge Join  (cost=11.24..14.44 rows=51 width=15)
         Merge Cond: t1.d = t2.d
         Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 1.411 ms to first row, 1.539 ms to end, start offset by 1.115 ms.
         ->  Sort  (cost=4.91..5.01 rows=20 width=15)
               Sort Key: t1.d
               Rows out:  Avg 20.0 rows x 2 workers.  Max 20 rows (seg0) with 1.203 ms to first row, 1.206 ms to end, start offset by 1.116 ms.
               Executor memory:  29K bytes avg, 29K bytes max (seg0).
               Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
               ->  Broadcast Motion 2:2  (slice1; segments: 2)  (cost=0.00..3.85 rows=20 width=15)
                     Rows out:  Avg 20.0 rows x 2 workers at destination.  Max 20 rows (seg0) with 1.070 ms to first row, 1.106 ms to end, start offset by 1.156 ms.
                     ->  Seq Scan on smallt t1  (cost=0.00..3.25 rows=10 width=15)
                           Filter: i < 2
                           Rows out:  Avg 10.0 rows x 2 workers.  Max 10 rows (seg0) with 0.051 ms to first row, 0.083 ms to end, start offset by 2.037 ms.
         ->  Sort  (cost=6.32..6.57 rows=50 width=4)
               Sort Key: t2.d
               Rows out:  Avg 71.0 rows x 2 workers.  Max 71 rows (seg0) with 0.196 ms to first row, 0.218 ms to end, start offset by 2.320 ms.
               Executor memory:  29K bytes avg, 29K bytes max (seg0).
               Work_mem used:  29K bytes avg, 29K bytes max (seg0). Workfile: (0 spilling, 0 reused)
               ->  Seq Scan on smallt t2  (cost=0.00..3.00 rows=50 width=4)
                     Rows out:  Avg 50.0 rows x 2 workers.  Max 50 rows (seg0) with 0.026 ms to first row, 0.077 ms to end, start offset by 2.360 ms.
 Slice statistics:
   (slice0)    Executor memory: 163K bytes.
   (slice1)    Executor memory: 191K bytes avg x 2 workers, 191K bytes max (seg0).
   (slice2)    Executor memory: 235K bytes avg x 2 workers, 235K bytes max (seg0).  Work_mem: 29K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_hashjoin=off; enable_mergejoin=on; enable_nestloop=off; gp_enable_agg_distinct=on
 Total runtime: 3.457 ms
(30 rows)

--end_ignore
set enable_hashjoin=on;
set enable_mergejoin=off;
-- ShareInputScan
--with my_group_max(i, maximum) as (select i, max(d) from smallt group by i)
--select smallt2.* from my_group_max, smallt2 where my_group_max.i = smallt2.i
--and smallt2.i < any (select maximum from my_group_max);
--explain analyze with my_group_max(i, maximum) as (select i, max(d) from smallt group by i)
--select smallt2.* from my_group_max, smallt2 where my_group_max.i = smallt2.i
--and smallt2.i < any (select maximum from my_group_max);
-- IndexScan
create index smallt_d_idx on smallt (d);
create index smallt2_d_idx on smallt2 (d);
set enable_hashjoin=off;
set enable_nestloop=on;
set enable_seqscan=off;
set enable_bitmapscan=off;
select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
 i |    t    |     d      
---+---------+------------
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
(20 rows)

explain analyze select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=300.33..601.12 rows=2 width=15)
   Rows out:  20 rows at destination with 0.783 ms to first row, 0.801 ms to end, start offset by 0.394 ms.
   ->  Nested Loop  (cost=300.33..601.12 rows=2 width=15)
         Join Filter: smallt.i = smallt2.i
         Rows out:  20 rows (seg0) with 0.162 ms to first row, 0.274 ms to end, start offset by 0.767 ms.
         ->  Index Scan using smallt_d_idx on smallt  (cost=0.00..300.34 rows=3 width=15)
               Index Cond: d = '01-04-2011'::date
               Rows out:  5 rows (seg0) with 0.020 ms to first row, 0.027 ms to end, start offset by 0.768 ms.
         ->  Materialize  (cost=300.33..300.37 rows=2 width=4)
               Rows out:  20 rows (seg0) with 0.138 ms to first row, 0.160 ms to end of 5 scans, start offset by 0.986 ms.
               ->  Index Scan using smallt2_d_idx on smallt2  (cost=0.00..300.32 rows=2 width=4)
                     Index Cond: d = '01-04-2011'::date
                     Rows out:  4 rows (seg0) with 0.017 ms to first row, 0.028 ms to end, start offset by 0.906 ms.
 Slice statistics:
   (slice0)    Executor memory: 159K bytes.
   (slice1)    Executor memory: 183K bytes avg x 2 workers, 215K bytes max (seg0).
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_bitmapscan=off; enable_hashjoin=off; enable_mergejoin=off; enable_nestloop=on; enable_seqscan=off; gp_enable_agg_distinct=on
 Total runtime: 1.593 ms
(20 rows)

-- BitmapScan
set enable_indexscan=off;
set enable_bitmapscan=on;
select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
 i |    t    |     d      
---+---------+------------
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
(20 rows)

explain analyze select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 2:1  (slice1; segments: 2)  (cost=202.63..205.14 rows=2 width=15)
   Rows out:  20 rows at destination with 0.932 ms to first row, 0.947 ms to end, start offset by 0.412 ms.
   ->  Nested Loop  (cost=202.63..205.14 rows=2 width=15)
         Join Filter: smallt.i = smallt2.i
         Rows out:  20 rows (seg0) with 0.237 ms to first row, 0.370 ms to end, start offset by 0.843 ms.
         ->  Bitmap Heap Scan on smallt  (cost=100.29..102.35 rows=3 width=15)
               Recheck Cond: d = '01-04-2011'::date
               Rows out:  5 rows (seg0) with 0.071 ms to first row, 0.079 ms to end, start offset by 0.843 ms.
               ->  Bitmap Index Scan on smallt_d_idx  (cost=0.00..100.29 rows=3 width=0)
                     Index Cond: d = '01-04-2011'::date
                     Bitmaps out:  Avg 1.0 x 2 workers.  Max 1 (seg0) with 0.019 ms to end, start offset by 0.875 ms.
                     Work_mem used:  9K bytes.
         ->  Materialize  (cost=102.34..102.38 rows=2 width=4)
               Rows out:  20 rows (seg0) with 0.162 ms to first row, 0.201 ms to end of 5 scans, start offset by 1.148 ms.
               ->  Bitmap Heap Scan on smallt2  (cost=100.28..102.33 rows=2 width=4)
                     Recheck Cond: d = '01-04-2011'::date
                     Rows out:  4 rows (seg0) with 0.043 ms to first row, 0.070 ms to end, start offset by 1.031 ms.
                     ->  Bitmap Index Scan on smallt2_d_idx  (cost=0.00..100.28 rows=2 width=0)
                           Index Cond: d = '01-04-2011'::date
                           Bitmaps out:  1 (seg0) with 0.012 ms to end, start offset by 1.051 ms.
                           Work_mem used:  9K bytes.
 Slice statistics:
   (slice0)    Executor memory: 223K bytes.
   (slice1)    Executor memory: 419K bytes avg x 2 workers, 487K bytes max (seg0).  Work_mem: 9K bytes max.
 Statement statistics:
   Memory used: 128000K bytes
 Settings:  enable_bitmapscan=on; enable_hashjoin=off; enable_indexscan=off; enable_mergejoin=off; enable_nestloop=on; enable_seqscan=off; gp_enable_agg_distinct=on
 Total runtime: 1.819 ms
(28 rows)

set enable_hashjoin=on;
set enable_nestloop=off;
set enable_seqscan=on;
set enable_indexscan=on;
-- SubPlan
with my_group_sum(d, total) as (select d, sum(i) from smallt group by d)
select smallt2.* from smallt2
where i < all (select total from my_group_sum, smallt, smallt2 as tmp where my_group_sum.d = smallt.d and smallt.d = tmp.d and my_group_sum.d = smallt2.d)
and i = 0 order by 1,2,3; --order 1,2,3
 i |   t    |     d      
---+--------+------------
 0 | text 0 | 01-06-2011
 0 | text 5 | 01-06-2011
 0 | text 5 | 01-06-2011
(3 rows)

select smallt2.* from smallt2
where i < all (select total from (select d, sum(i) as total from smallt group by d) as my_group_sum, smallt, smallt2 as tmp
    where my_group_sum.d = smallt.d and smallt.d = tmp.d and my_group_sum.d = smallt2.d)
and i = 0 order by 1,2,3; --order 1,2,3
 i |   t    |     d      
---+--------+------------
 0 | text 0 | 01-06-2011
 0 | text 5 | 01-06-2011
 0 | text 5 | 01-06-2011
(3 rows)

-- Nested Subplan
drop table if exists eager_free_r;
NOTICE:  table "eager_free_r" does not exist, skipping
drop table if exists eager_free_s;
NOTICE:  table "eager_free_s" does not exist, skipping
drop table if exists eager_free_t;
NOTICE:  table "eager_free_t" does not exist, skipping
create table eager_free_r (r1 int, r2 int, r3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'r1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table eager_free_s (s1 int, s2 int, s3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 's1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table eager_free_t (t1 int, t2 int, t3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 't1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into eager_free_r select generate_series(1, 20), generate_series(1, 5), generate_series(1, 8);
insert into eager_free_s select generate_series(1, 20), generate_series(6, 10), generate_series(1, 4);
insert into eager_free_t select generate_series(1, 30), generate_series(1, 6), generate_series(1, 5);
select * from eager_free_t where t1 > (select min(r1) from eager_free_r where r2<t2 and r3 > (Select min(s3) from eager_free_s where s1<r1));
 t1 | t2 | t3 
----+----+----
  3 |  3 |  3
  5 |  5 |  5
  9 |  3 |  4
 11 |  5 |  1
 15 |  3 |  5
 17 |  5 |  2
 21 |  3 |  1
 23 |  5 |  3
 27 |  3 |  2
 29 |  5 |  4
  4 |  4 |  4
  6 |  6 |  1
  8 |  2 |  3
 10 |  4 |  5
 12 |  6 |  2
 14 |  2 |  4
 16 |  4 |  1
 18 |  6 |  3
 20 |  2 |  5
 22 |  4 |  2
 24 |  6 |  4
 26 |  2 |  1
 28 |  4 |  3
 30 |  6 |  5
(24 rows)

